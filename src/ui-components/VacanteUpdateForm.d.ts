/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, SwitchFieldProps, TextFieldProps } from "@aws-amplify/ui-react";
import { EscapeHatchProps } from "@aws-amplify/ui-react/internal";
import { Vacante } from "../models";
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type VacanteUpdateFormInputValues = {
    nombreVacante?: string;
    descripcion?: string;
    numeroPlazas?: string;
    diasLaborales?: string;
    salario?: string;
    habilidadesBlandas?: string;
    habilidadesTecnicas?: string;
    generoBDT?: string;
    edadMin?: string;
    edadMax?: string;
    discapacidadAcept?: string[];
    area?: string;
    tipoEmpleo?: string;
    causaVacante?: string;
    dispViajar?: boolean;
    dispRadicar?: boolean;
    nivelPuesto?: string;
    experiencia?: string;
    escolaridad?: string;
    vigenciaVacante?: string;
    prestaciones?: string;
    direccionEmpresa?: boolean;
    municipio?: string;
    colonia?: string;
    calle?: string;
    codigoPostal?: string;
    numero?: string;
    idioma?: string;
    statusVisible?: boolean;
    tipoCotrato?: string;
    modalidad?: string;
    tipoLicencia?: string;
    contratoDirecto?: string;
    salarioMax?: string;
    salarioMin?: string;
    periodoPago?: string;
    tipoSueldo?: string;
    correoContactoDirecto?: string;
    telefonoContactoDirecto?: string;
    horarioLaboral?: string;
};
export declare type VacanteUpdateFormValidationValues = {
    nombreVacante?: ValidationFunction<string>;
    descripcion?: ValidationFunction<string>;
    numeroPlazas?: ValidationFunction<string>;
    diasLaborales?: ValidationFunction<string>;
    salario?: ValidationFunction<string>;
    habilidadesBlandas?: ValidationFunction<string>;
    habilidadesTecnicas?: ValidationFunction<string>;
    generoBDT?: ValidationFunction<string>;
    edadMin?: ValidationFunction<string>;
    edadMax?: ValidationFunction<string>;
    discapacidadAcept?: ValidationFunction<string>;
    area?: ValidationFunction<string>;
    tipoEmpleo?: ValidationFunction<string>;
    causaVacante?: ValidationFunction<string>;
    dispViajar?: ValidationFunction<boolean>;
    dispRadicar?: ValidationFunction<boolean>;
    nivelPuesto?: ValidationFunction<string>;
    experiencia?: ValidationFunction<string>;
    escolaridad?: ValidationFunction<string>;
    vigenciaVacante?: ValidationFunction<string>;
    prestaciones?: ValidationFunction<string>;
    direccionEmpresa?: ValidationFunction<boolean>;
    municipio?: ValidationFunction<string>;
    colonia?: ValidationFunction<string>;
    calle?: ValidationFunction<string>;
    codigoPostal?: ValidationFunction<string>;
    numero?: ValidationFunction<string>;
    idioma?: ValidationFunction<string>;
    statusVisible?: ValidationFunction<boolean>;
    tipoCotrato?: ValidationFunction<string>;
    modalidad?: ValidationFunction<string>;
    tipoLicencia?: ValidationFunction<string>;
    contratoDirecto?: ValidationFunction<string>;
    salarioMax?: ValidationFunction<string>;
    salarioMin?: ValidationFunction<string>;
    periodoPago?: ValidationFunction<string>;
    tipoSueldo?: ValidationFunction<string>;
    correoContactoDirecto?: ValidationFunction<string>;
    telefonoContactoDirecto?: ValidationFunction<string>;
    horarioLaboral?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type VacanteUpdateFormOverridesProps = {
    VacanteUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    nombreVacante?: PrimitiveOverrideProps<TextFieldProps>;
    descripcion?: PrimitiveOverrideProps<TextFieldProps>;
    numeroPlazas?: PrimitiveOverrideProps<TextFieldProps>;
    diasLaborales?: PrimitiveOverrideProps<TextFieldProps>;
    salario?: PrimitiveOverrideProps<TextFieldProps>;
    habilidadesBlandas?: PrimitiveOverrideProps<TextFieldProps>;
    habilidadesTecnicas?: PrimitiveOverrideProps<TextFieldProps>;
    generoBDT?: PrimitiveOverrideProps<TextFieldProps>;
    edadMin?: PrimitiveOverrideProps<TextFieldProps>;
    edadMax?: PrimitiveOverrideProps<TextFieldProps>;
    discapacidadAcept?: PrimitiveOverrideProps<TextFieldProps>;
    area?: PrimitiveOverrideProps<TextFieldProps>;
    tipoEmpleo?: PrimitiveOverrideProps<TextFieldProps>;
    causaVacante?: PrimitiveOverrideProps<TextFieldProps>;
    dispViajar?: PrimitiveOverrideProps<SwitchFieldProps>;
    dispRadicar?: PrimitiveOverrideProps<SwitchFieldProps>;
    nivelPuesto?: PrimitiveOverrideProps<TextFieldProps>;
    experiencia?: PrimitiveOverrideProps<TextFieldProps>;
    escolaridad?: PrimitiveOverrideProps<TextFieldProps>;
    vigenciaVacante?: PrimitiveOverrideProps<TextFieldProps>;
    prestaciones?: PrimitiveOverrideProps<TextFieldProps>;
    direccionEmpresa?: PrimitiveOverrideProps<SwitchFieldProps>;
    municipio?: PrimitiveOverrideProps<TextFieldProps>;
    colonia?: PrimitiveOverrideProps<TextFieldProps>;
    calle?: PrimitiveOverrideProps<TextFieldProps>;
    codigoPostal?: PrimitiveOverrideProps<TextFieldProps>;
    numero?: PrimitiveOverrideProps<TextFieldProps>;
    idioma?: PrimitiveOverrideProps<TextFieldProps>;
    statusVisible?: PrimitiveOverrideProps<SwitchFieldProps>;
    tipoCotrato?: PrimitiveOverrideProps<TextFieldProps>;
    modalidad?: PrimitiveOverrideProps<TextFieldProps>;
    tipoLicencia?: PrimitiveOverrideProps<TextFieldProps>;
    contratoDirecto?: PrimitiveOverrideProps<TextFieldProps>;
    salarioMax?: PrimitiveOverrideProps<TextFieldProps>;
    salarioMin?: PrimitiveOverrideProps<TextFieldProps>;
    periodoPago?: PrimitiveOverrideProps<TextFieldProps>;
    tipoSueldo?: PrimitiveOverrideProps<TextFieldProps>;
    correoContactoDirecto?: PrimitiveOverrideProps<TextFieldProps>;
    telefonoContactoDirecto?: PrimitiveOverrideProps<TextFieldProps>;
    horarioLaboral?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type VacanteUpdateFormProps = React.PropsWithChildren<{
    overrides?: VacanteUpdateFormOverridesProps | undefined | null;
} & {
    id?: string;
    vacante?: Vacante;
    onSubmit?: (fields: VacanteUpdateFormInputValues) => VacanteUpdateFormInputValues;
    onSuccess?: (fields: VacanteUpdateFormInputValues) => void;
    onError?: (fields: VacanteUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: VacanteUpdateFormInputValues) => VacanteUpdateFormInputValues;
    onValidate?: VacanteUpdateFormValidationValues;
} & React.CSSProperties>;
export default function VacanteUpdateForm(props: VacanteUpdateFormProps): React.ReactElement;
